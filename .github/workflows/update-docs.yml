name: Update Claude Code Documentation

on:
  # Run daily at 06:00 UTC
  schedule:
    - cron: '0 6 * * *'
  
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      section:
        description: 'Specific section to update (optional)'
        required: false
        type: string
      
  # Run on pushes to main branch (for testing)
  push:
    branches:
      - main
    paths:
      - 'scripts/**'
      - 'config.yaml'
      - '.github/workflows/**'

jobs:
  update-documentation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create docs directory
      run: mkdir -p docs
    
    - name: Run documentation scraper
      run: |
        if [ -n "${{ github.event.inputs.section }}" ]; then
          echo "Scraping specific section: ${{ github.event.inputs.section }}"
          python scripts/scrape_docs.py --section "${{ github.event.inputs.section }}" --verbose
        else
          echo "Scraping all documentation sections"
          python scripts/scrape_docs.py --verbose
        fi
    
    - name: Check for changes
      id: check_changes
      run: |
        if git diff --quiet docs/; then
          echo "No changes detected"
          echo "changes=false" >> $GITHUB_OUTPUT
        else
          echo "Changes detected"
          echo "changes=true" >> $GITHUB_OUTPUT
        fi
    
    - name: Commit and push changes
      if: steps.check_changes.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add all changes in docs folder
        git add docs/
        
        # Create commit message
        if [ -n "${{ github.event.inputs.section }}" ]; then
          COMMIT_MSG="Update documentation for section: ${{ github.event.inputs.section }}"
        else
          COMMIT_MSG="Update Claude Code documentation - $(date +'%Y-%m-%d %H:%M UTC')"
        fi
        
        # Commit changes
        git commit -m "$COMMIT_MSG"
        
        # Push changes
        git push
    
    - name: Upload scraper logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: scraper-logs
        path: scraper.log
        retention-days: 7
    
    - name: Create summary
      if: always()
      run: |
        echo "## Documentation Update Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.check_changes.outputs.changes }}" == "true" ]; then
          echo "✅ Documentation updated successfully" >> $GITHUB_STEP_SUMMARY
          
          # Show which files were changed
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Files Updated:" >> $GITHUB_STEP_SUMMARY
          git diff --name-only HEAD~1 docs/ | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY
        else
          echo "ℹ️ No changes detected - documentation is up to date" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Scraping Details:" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "scraper.log" ]; then
          echo "```" >> $GITHUB_STEP_SUMMARY
          tail -20 scraper.log >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
        else
          echo "No log file generated" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "*Last run: $(date +'%Y-%m-%d %H:%M:%S UTC')*" >> $GITHUB_STEP_SUMMARY
